{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\tod-assignment\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const addTodo = todo => {\n      if (!todo.text || /^\\s*$/.test(todo.text)) {\n        return;\n      }\n\n      const newTodos = [todo, ...todos];\n      setTodos(newTodos);\n      console.log(...todos);\n    };\n  }, [input]);\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }; // localStorage.setItem('list',JSON.stringify(todos));\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"What's the Plan for Today?\"), /*#__PURE__*/React.createElement(TodoForm, {\n    onSubmit: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Todo, {\n    todos: todos,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    updateTodo: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["D:/React/tod-assignment/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoForm","Todo","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","console","log","input","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removedArr","filter","completeTodo","updatedTodos","isComplete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;AACzC;AACD;;AAED,YAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AAEAC,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAGR,KAAf;AACD,KATD;AAUD,GAXQ,EAWN,CAACS,KAAD,CAXM,CAAT;;AAcA,QAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACvC,QAAI,CAACA,QAAQ,CAACR,IAAV,IAAkB,QAAQC,IAAR,CAAaO,QAAQ,CAACR,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAEDH,IAAAA,QAAQ,CAACY,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAAlD,CAAT,CAAR;AACD,GAND;;AAQA,QAAME,UAAU,GAAGD,EAAE,IAAI;AACvB,UAAME,UAAU,GAAG,CAAC,GAAGlB,KAAJ,EAAWmB,MAAX,CAAkBhB,IAAI,IAAIA,IAAI,CAACa,EAAL,KAAYA,EAAtC,CAAnB;AAEAf,IAAAA,QAAQ,CAACiB,UAAD,CAAR;AACD,GAJD;;AAMA,QAAME,YAAY,GAAGJ,EAAE,IAAI;AACzB,QAAIK,YAAY,GAAGrB,KAAK,CAACc,GAAN,CAAUX,IAAI,IAAI;AACnC,UAAIA,IAAI,CAACa,EAAL,KAAYA,EAAhB,EAAoB;AAClBb,QAAAA,IAAI,CAACmB,UAAL,GAAkB,CAACnB,IAAI,CAACmB,UAAxB;AACD;;AACD,aAAOnB,IAAP;AACD,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACoB,YAAD,CAAR;AACD,GARD,CA/BkB,CAwClB;;;AAEA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEnB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,YAAY,EAAEoB,YAFhB;AAGE,IAAA,UAAU,EAAEH,UAHd;AAIE,IAAA,UAAU,EAAEP,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAYD;;AAED,eAAeX,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const addTodo = (todo) => {\n      if (!todo.text || /^\\s*$/.test(todo.text)) {\n        return;\n      }\n\n      const newTodos = [todo, ...todos];\n\n      setTodos(newTodos);\n      console.log(...todos);\n    };\n  }, [input])\n  \n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  // localStorage.setItem('list',JSON.stringify(todos));\n\n  return (\n    <>\n      <h1>What's the Plan for Today?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}